##############初始界面##############################
#初始界面用到的函数
Quit()	#退出函数
{
	clear
	echo "***************************"
	echo "*        感谢使用         *"
	echo "***************************"
	sleep 1	#停留1s后再次清空屏幕
	clear
	exit 0
}
ManagerLogIn() #管理员登录函数
{
	clear
	read -p "请输入您的用户名： " name
	read -s -p "请输入您的密码： " passwd

	#从文件中查找是否有符合条件的用户名和密码
	#grep -w有助于精确匹配，减少错误登入几率
	num=`cat hwsystem/manager|grep -w "$name $passwd"|wc -l`

	if [ $num -eq 1 ] #若用户存在且密码正确
	then
		echo -e "\n登录成功！"
		sleep 1
		Manager
	else
		echo -e "\n用户不存在或密码错误！"
		sleep 1
	fi
}
TeacherLogIn() #教师登录函数
{
	clear
	read -p "请输入您的工号： " id
	read -s -p "请输入您的密码： " passwd
	num=`cat hwsystem/teacher|grep -w "$id $passwd"|wc -l`
	if [ $num -eq 1 ]
	then
		echo -e "\n登录成功！"
		sleep 1
		Teacher
	else
		echo -e "\n用户不存在或密码错误！"
		sleep 1
	fi
}
StudentLogIn()	#学生登录函数
{
	clear
	read -p "请输入您的学号： " sid
	read -s -p "请输入您的密码： " passwd
	num=`cat hwsystem/student|grep -w "$sid $passwd"|wc -l`
	if [ $num -eq 1 ]
	then
		echo -e "\n登录成功！"
		sleep 1
		Student
	else
		echo -e "\n用户不存在或密码错误！"
		sleep 1
	fi
}
####################################################


#####################管理员函数######################
Manager() #管理员操作选择界面
{
	mname=$name
	while true
	do
		clear
		echo "您好，$mname!"
		echo "==========================="
		echo "请选择您的操作： "
		echo "==========================="
		echo "0) 创建管理员（慎用）"
		echo "1) 创建教师用户"
		echo "2) 修改教师用户"
		echo "3) 显示教师用户"
		echo "4) 删除教师用户"
		echo "5) 创建课程"
		echo "6) 修改课程"
		echo "7) 显示课程"
		echo "8) 删除课程"
		echo "9) 绑定教师与课程"
		echo "10)返回"
		echo "==========================="
		echo -e "您的选择是（0-10）： \c"
		read choice
		case $choice in
			0) CreateManager;;
			1) CreateTeacher;;
			2) ModifyTeacher;;
			3) DisplayTeacher;;
			4) RemoveTeacher;;
			5) CreateCourse;;
			6) ModifyCourse;;
			7) DisplayCourse;;
			8) RemoveCourse;;
			9) BindCourse;;
			10) break;;	#跳出循环
			*) echo "$choice是一个无效的输入"
			   sleep 1;;
		esac
	done
}

CreateManager()	#创建一个新管理员
{
	clear
	read -p "请输入您的用户名： " name
	#awk显示第一列即所有用户名，再取出$name,查看用户是否已经存在
	num=`cat hwsystem/manager|awk '{print $1}'|grep -w $name|wc -l`
	if [ $num -ne 0 ]
	then
		echo "用户已经存在，请重试！"
		sleep 1
		return
	fi
	read -s -p "请输入您的密码： " passwd
	echo ""
	read -s -p "确认密码： " passwd2
	echo ""
	if [ $passwd != $passwd2 ]
	then
		echo "两次密码不一致！创建失败！"
		sleep 1
	else
		echo "创建成功！"
		#往文件中写入新用户名和密码
		echo "$name $passwd" >> hwsystem/manager
		sleep 1
	fi
}

CreateTeacher()	#创建一个新教师
{
	clear
	echo -e "输入教师工号（5位）： \c"
	read id
	if [ ${#id} -ne 5 ]	#判断字符串长度
	then
		echo "教师工号必须为5位！"
		sleep 1
	else
		num=`cat hwsystem/teacher|awk '{print $1}'|grep -w $id|wc -l`
		if [ $num -ne 0 ]
		then
			echo "该教师工号已经存在，请重试！"
			sleep 1
			return
		fi
		read -s -p "输入密码： " passwd
		echo ""
		read -s -p "确认密码： " passwd2
		echo ""
		if [ $passwd != $passwd2 ]
		then
			echo "两次密码不一致！创建失败！"
			sleep 1
		else
			read -p "输入教师姓名： " name
			echo ""
			#将教师信息保存在teacher中
			echo "$id $passwd $name" >> hwsystem/teacher
		fi
		echo "创建教师成功！"
		sleep 1
	fi
}

ModifyTeacher()	#修改教师用户
{
	clear
	read -p "请输入需要修改的教师工号： " id

	#查找该工号是否存在
	num=`cat hwsystem/teacher|awk '{print $1}'|grep -w $id|wc -l`
	if [ $num -ne 1 ]
	then
		echo "该教师工号不存在！"
		sleep 1
		return
	fi

	#查询教师姓名
	name=`cat hwsystem/teacher|awk '{if($1=="'$id'"){print $3}}'|head -1`
	echo "您确定要修改工号为$id,姓名为$name的教师的资料？"
	read -p "您的选择是（y/n)： " choice
	if [ "$choice" = "n" ]
	then
		echo "您取消了操作！"
		sleep 1
		return
	elif [ "$choice" != "y" ]
	then
		echo "$choice是一个无效的输入！"
		sleep 1
		return
	fi
	while true
	do
		clear
		ShowTeacherInformation
		echo "**********************************************"
		echo "=============================================="
		echo "请选择您的操作： "
		echo "=============================================="
		echo "1) 修改教师姓名"
		echo "2) 修改教师密码"
		echo "3) 解绑教师课程"
		echo "4) 返回"
		echo "=============================================="
		read -p "您的选择是（1-4）： " choice

		#更新现在情况下的密码和姓名
		passwd=`cat hwsystem/teacher|awk '{if($1=="'$id'"){print $2}}'|head -1`
		name=`cat hwsystem/teacher|awk '{if($1=="'$id'"){print $3}}'|head -1`

		case $choice in
			1) #删除原来的信息
			   sed '/'$id' '$passwd' '$name'/d' hwsystem/teacher > hwsystem/temp
			   cat hwsystem/temp > hwsystem/teacher
			   read -p "请输入新的姓名： " name
			   #插入新信息
			   echo "$id $passwd $name" >> hwsystem/teacher
			   echo "更新姓名成功！"
			   sleep 1
			   ;;
			2) #判断原密码是否正确
			   read -s -p "请输入原密码： " oldpw
			   echo ""
			   if [ "$oldpw" != "$passwd" ]
			   then
			   		echo "密码错误！请重试！"
			   		sleep 1
			   else
				   read -s -p "请输入新密码： " passwd1
				   echo ""
				   read -s -p "请确认新密码： " passwd2
				   echo ""
				   if [ "$passwd1" != "$passwd2" ]
				   then
				   		echo "两次密码不一致！请重试！"
				   		sleep 1
				   else
					   #删除旧信息
					   sed '/'$id' '$passwd' '$name'/d' hwsystem/teacher > hwsystem/temp
					   cat hwsystem/temp > hwsystem/teacher
					   #插入新信息
					   echo "$id $passwd1 $name" >> hwsystem/teacher
					   echo "更新成功！"
					   sleep 1
				   fi
			   fi
			   ;;
			3) read -p "请输入课程号： " cid
			   read -p "请输入课程时间： " ctime
			   read -p "请输入上课地点： " place
			   num=`cat hwsystem/course|awk '{if($1=="'$cid'"&&$3=="'$id'"&&$4=="'$ctime'"&&$5=="'$place'"){print $2}}'|wc -l`
			   if [ $num -eq 0 ]
			   then
			   		echo "课程不存在！请重试！"
			   		sleep 1
			   else
			   		name=`cat hwsystem/course|awk '{if($1=="'$cid'"&&$3=="'$id'"&&$4=="'$ctime'"&&$5=="'$place'"){print $2}}'|head -1`
			   		#删除旧信息
			   		sed '/'$cid' '$name' '$id' '$ctime' '$place'/d' hwsystem/course > hwsystem/temp
			   		cat hwsystem/temp > hwsystem/course

			   		#若该课程已经没有与教师绑定，则插入NULL信息
			   		num=`cat hwsystem/course|awk '{print $1}'|grep -w $cid|wc -l`
			   		if [ $num -eq 0 ]
			   		then
			   			echo "$cid $name NULL NULL NULL" >> hwsystem/course
			   		fi
			   		echo "解绑成功！"
			   		sleep 1
			   fi
			   ;;
			4) break;;
			*) echo "$choice是一个无效的输入！"
			   sleep 1;;
		esac
	done
}

DisplayTeacher() #显示教师信息
{
	clear
	echo "请选择您的操作： "
	echo "==============================="
	echo "1) 显示所有教师信息"
	echo "2) 显示某一教师信息"
	echo "3) 返回"
	echo "==============================="
	read -p "您的选择是（1-3）： " choice
	case $choice in
		1) clear
		   #对每个教师工号进行显示
		   declare -i i=0
		   echo "**********************************************"
		   for id in `cat hwsystem/teacher|awk '{print $1}'`
		   do
		   		i=$i+1
		   		echo "编号$i："
		   		ShowTeacherInformation	#显示工号为id的教师信息
		   		echo "**********************************************"
		   		echo ""
		   done 
		   echo "按回车返回"
		   read anychar
		   ;;
		2) clear
		   read -p "请输入教师工号： " id
		   num=`cat hwsystem/teacher|awk '{print $1}'|grep -w $id|wc -l`
		   if [ $num -eq 0 ]
		   then
		   		echo "该教师工号不存在！"
		   		sleep 1
		   else
		   		ShowTeacherInformation	#显示工号为id的教师信息
		   		echo "按回车返回"
		   read anychar
		   fi
		   ;;
		3) break;;
		*) echo "$choice是一个无效的输入！"
		   sleep 1
	esac
}

RemoveTeacher() #删除教师用户
{
	clear
	read -p "请输入需要删除的教师工号： " id
	num=`cat hwsystem/teacher|awk '{print $1}'|grep -w "$id"|wc -l`
	if [ $num -eq 0 ]
	then
		echo "该教师工号不存在！"
		sleep 1
		return
	fi

	read -p "您确定要删除该教师？(y/n): " choice
	if [ "$choice" = "n" ]
	then
		echo "您已取消了该操作！"
		sleep 1
	elif [ "$choice" != "y" ]
	then
		echo "$choice是一个无效的输入！"
		sleep 1
	else
		#删除teacher中教师工号为id的教师信息
		cat hwsystem/teacher|awk '{if($1!="'$id'"){print}}' > hwsystem/temp
		cat hwsystem/temp > hwsystem/teacher

		#删除course中教师工号为id的教师信息
		cat hwsystem/course|awk '{if($3!="'$id'"){print}}' > hwsystem/temp
		cat hwsystem/temp > hwsystem/course

		#删除relation中教师工号为id的教师信息
		cat hwsystem/relation|awk '{if($2!="'$id'"){print}}' > hwsystem/temp
		cat hwsystem/temp > hwsystem/relation

		echo "删除工号为$id的教师成功！"
		sleep 1
	fi
}

CreateCourse()	#创建一个新课程
{
	clear
	read -p "请输入课程号： " id
	num=`cat hwsystem/course|awk '{print $1}'|grep -w $id|wc -l`
	if [ $num -ne 0 ]
	then
		echo "该课程号已经存在！请重试！"
		sleep 1
		return
	fi
	read -p "请输入课程名： " name
	#6个变量分别为课程id、课程名、教师工号、上课地点、上课时间、作业
	echo "$id $name NULL NULL NULL" >> hwsystem/course
	echo "创建成功！"
	sleep 1
}

ModifyCourse()	#修改课程信息
{
	clear
	read -p "请输入需要修改的课程号： " cid
	num=`cat hwsystem/course|awk '{print $1}'|grep -w "$cid"|wc -l`
	if [ $num -eq 0 ]
	then
		echo "该课程号不存在！请重试"
		sleep 1
		return
	fi
	while true
	do
		clear
		ShowCourseInformation
		echo "=============================================="
		echo "请选择您的操作："
		echo "=============================================="
		echo "1) 修改课程名"
		echo "2) 修改课程时间"
		echo "3) 修改课程地点"
		echo "4) 返回"
		echo "=============================================="
		read -p "您的选择是（1-4）： " choice
		case $choice in
			1) read -p "请输入新的课程名： " name
			   #修改课程名
			   awk '{if($1=="'$cid'"){$2="'$name'"};print}' hwsystem/course > hwsystem/temp
			   cat hwsystem/temp > hwsystem/course
			   ;;
			2) clear
			   read -p "请输入原课程时间： " oldtime
			   read -p "请输入原课程地点： " oldplace
			   num=`awk '{if($4=="'$oldtime'"&&$5=="'$oldplace'"){print}}' hwsystem/course|wc -l`
			   if [ $num -eq 0 ]
			   then
			   		echo "该时间、地点的课程不存在！请重试！"
			   		sleep 1
			   else
			   		read -p "请输入新课程时间： " newtime
			   		#修改课程时间
			   		awk '{if($1=="'$cid'"&&$4=="'$oldtime'"&&$5=="'$oldplace'"){$4="'$newtime'"};print}' hwsystem/course > hwsystem/temp
			   		cat hwsystem/temp > hwsystem/course
			   fi
			   ;;
			3) clear
			   read -p "请输入原课程时间： " oldtime
			   read -p "请输入原课程地点： " oldplace
			   num=`awk '{if($4=="'$oldtime'"&&$5=="'$oldplace'"){print}}' hwsystem/course|wc -l`
			   if [ $num -eq 0 ]
			   then
			   		echo "该时间、地点的课程不存在！请重试！"
			   		sleep 1
			   else
			   		read -p "请输入新课程地点： " newplace
			   		#修改课程时间
			   		awk '{if($1=="'$cid'"&&$4=="'$oldtime'"&&$5=="'$oldplace'"){$5="'$newplace'"};print}' hwsystem/course > hwsystem/temp
			   		cat hwsystem/temp > hwsystem/course
			   fi
			   ;;
			4) break;;
			*) echo "$choice是一个无效的输入！"
			   sleep 1;;
		esac
	done
}

DisplayCourse()	#显示课程信息
{
	clear
	echo "请选择您的操作： "
	echo "==============================="
	echo "1) 显示所有课程信息"
	echo "2) 显示某一课程信息"
	echo "3) 返回"
	echo "==============================="
	read -p "您的选择是（1-3）： " choice
	case $choice in
		1) clear
		   #对每个课程进行显示
		   declare -i i=0
		   echo "**********************************************"
		   for cid in `cat hwsystem/course|awk '{print $1}'|awk '!a[$1]++'`
		   do
		   		i=$i+1
		   		echo "编号$i："
		   		ShowCourseInformation	#显示课程号为cid的教师信息
		   		echo "**********************************************"
		   		echo ""
		   done 
		   echo "按回车返回"
		   read anychar
		   ;;
		2) clear
		   read -p "请输入课程号： " cid
		   num=`cat hwsystem/course|awk '{print $1}'|grep -w $cid|wc -l`
		   if [ $num -eq 0 ]
		   then
		   		echo "该课程号不存在！"
		   		sleep 1
		   else
		   		ShowCourseInformation	#显示课程号为id的教师信息
		   		echo "按回车返回"
		   read anychar
		   fi
		   ;;
		3) break;;
		*) echo "$choice是一个无效的输入！"
		   sleep 1
	esac
}

RemoveCourse()	#移除课程
{
	clear
	read -p "请输入需要删除的课程号： " cid
	num=`cat hwsystem/course|awk '{print $1}'|grep -w "$cid"|wc -l`
	if [ $num -eq 0 ]
	then
		echo "该课程号不存在！"
		sleep 1
		return
	fi

	read -p "您确定要删除该课程？(y/n): " choice
	if [ "$choice" = "n" ]
	then
		echo "您已取消了该操作！"
		sleep 1
	elif [ "$choice" != "y" ]
	then
		echo "$choice是一个无效的输入！"
		sleep 1
	else
		#删除course中课程号为cid的教师信息
		cat hwsystem/course|awk '{if($1!="'$cid'"){print}}' > hwsystem/temp
		cat hwsystem/temp > hwsystem/course

		#删除relation中课程号为cid的教师信息
		cat hwsystem/relation|awk '{if($1!="'$cid'"){print}}' > hwsystem/temp
		cat hwsystem/temp > hwsystem/relation

		echo "删除课程号为$cid的课程成功！"
		sleep 1
	fi
}

BindCourse()	#绑定教师与课程
{
	clear
	
	read -p "请输入课程号： " cid
	#判断课程号是否存在
	num=`cat hwsystem/course|awk '{print $1}'|grep -w $cid|wc -l`
	if [ $num -eq 0 ]
	then
		echo "课程号不存在！请重试！"
		sleep 1
		return
	fi

	read -p "请输入教师工号： " tid
	#判断教师是否存在
	num=`cat hwsystem/teacher|awk '{print $1}'|grep -w $tid|wc -l`
	if [ $num -eq 0 ]
	then
		echo "教师工号不存在！请重试！"
		sleep 1
		return
	fi
	read -p "请输入上课时间（多个时间用“；”分割）： " ctime
	read -p "请输入上课地点（多个地点用“；”分割）： " place

	#判断该时间、地点是否已有教师授课
	num=`awk '{if($4=="'$ctime'"&&$5=="'$place'"){print}}' hwsystem/course|wc -l`
	if [ $num -ne 0 ]
	then
		echo "当前时间、地点已经有人授课"
		sleep 1
		return
	fi

	#判断该教师在这个时间是否有课程
	num=`awk '{if($3=="'$tid'"&&$4=="'$ctime'"){print}}' hwsystem/course|wc -l`
	if [ $num -ne 0 ]
	then
		echo "该教师在当前时间已有课程！"
		sleep 1
		return
	fi

	#获取课程名
	name=`cat hwsystem/course|awk '{if($1=="'$cid'"){print $2}}'|head -1`
	echo "$cid $name $tid $ctime $place" >> hwsystem/course

	#删除旧有的NULL行,temp文件用于缓存
	sed '/'$cid' '$name' NULL NULL NULL/d' hwsystem/course > hwsystem/temp
	cat hwsystem/temp > hwsystem/course 

	echo "绑定成功！"
	sleep 1
}

ShowTeacherInformation()	#显示单个教师信息
{
	echo "=============================================="
	echo "                  教师信息"
	echo "=============================================="
	echo "教师工号： $id"
	name=`cat hwsystem/teacher|awk '{if($1=="'$id'"){print $3}}'`
	echo "教师姓名： $name"
	echo "=============================================="
	echo "该教师所授课程："
	cat hwsystem/course|awk -vOFS="\t" '{if($3=="'$id'"){print $1,$2,$4,$5}}'
	echo "=============================================="
}

ShowCourseInformation()	#显示单个课程信息
{
	echo "=============================================="
	echo "                  课程信息"
	echo "=============================================="
	name=`cat hwsystem/course|awk '{if($1=="'$cid'"){print $2}}'|awk '!a[$1]++'`
	echo "课程号： $cid       课程名： $name"
	echo "教授该课程的有： "
	cat hwsystem/course|awk '{if($1=="'$cid'"){print}}' > hwsystem/temp
	cat hwsystem/temp|while read line
	do
		cid=`echo $line|awk '{print $1}'`
		id=`echo $line|awk '{print $3}'`
		name=`awk '{if($1=="'$id'"){print $3}}' hwsystem/teacher`
		echo "$id	$name	`echo $line|awk -vOFS="\t" '{print $4,$5}'`"
	done
	echo "=============================================="
}
########################################################


#####################教师函数############################
Teacher()	#教师操作选择界面
{
	tname=`awk '{if($1=="'$id'"){print $3}}' hwsystem/teacher`
	while true
	do
		clear
		echo "您好，$tname!"
		echo "==========================="
		echo "请选择您的操作： "
		echo "==========================="
		echo "1) 显示个人信息"
		echo "2) 导入学生账户"
		echo "3) 查看课程信息"
		echo "4) 发布课程信息"
		echo "5) 删除学生账户"
		echo "6) 布置作业或实验"
		echo "7) 查看作业完成情况"
		echo "8) 返回"
		echo "==========================="
		echo -e "您的选择是（1-8）： \c"
		read choice
		case $choice in
			1) clear
			   ShowTeacherInformation
			   echo "按回车返回"
			   read anychar
			   ;;
			2) LoadStudent;;
			3) ShowCourse;;
			4) DiliverCourse;;
			5) RemoveStudent;;
			6) DiliverHomework;;
			7) CheckHomework;;
			8) break;;	#跳出循环
			*) echo "$choice是一个无效的输入"
			   sleep 1;;
		esac
	done
}

LoadStudent()	#导入学生信息
{
	clear
	read -p "请输入课程号： " cid
	num=`awk '{print $1}' hwsystem/course|grep -w "$cid"|wc -l`
	if [ $num -eq 0 ]
	then
		echo "该课程号不存在！"
		sleep 1
		return
	fi
	read -p "请输入上课时间： " ctime
	read -p "请输入上课地点： " place
	num=`awk '{if($1=="'$cid'"&&$3=="'$id'"&&$4=="'$ctime'"&&$5=="'$place'"){print}}' hwsystem/course|wc -l`
	if [ $num -eq 0 ]
	then
		echo "当前时间、地点的课程不存在！"
		sleep 1
		return
	fi
	read -p "请输入学生账号： " sid

	#判断该学生是否已经录入
	num=`awk '{if($1=="'$cid'"&&$2=="'$id'"&&$4=="'$ctime'"&&$5=="'$place'"){print $3}}' hwsystem/relation|grep -w $sid|wc -l`
	if [ $num -ne 0 ]
	then
		echo "该学生已经录入！"
		sleep 1
		return
	else
		echo "$cid $id $sid $ctime $place" >> hwsystem/relation
	fi

	#若学生账户尚未注册，则置初始密码为账号值
	num=`awk '{print $1}' hwsystem/student|grep -w "$sid"|wc -l`
	if [ $num -eq 0 ]
	then
		echo "$sid $sid NULL" >> hwsystem/student
	fi
	echo "导入成功"
	sleep 1
}

ShowCourse()	#显示课程信息
{
	clear
	read -p "请输入课程号： " cid
	num=`awk '{print $1}' hwsystem/course|grep -w "$cid"|wc -l`
	if [ $num -eq 0 ]
	then
		echo "该课程号不存在！"
		sleep 1
		return
	fi
	read -p "请输入上课时间： " ctime
	read -p "请输入上课地点： " place
	num=`awk '{if($1=="'$cid'"&&$3=="'$id'"&&$4=="'$ctime'"&&$5=="'$place'"){print}}' hwsystem/course|wc -l`
	if [ $num -eq 0 ]
	then
		echo "当前时间、地点的课程不存在！"
		sleep 1
		return
	fi

	clear
	name=`awk '{if($1=="'$cid'"){print $2}}' hwsystem/course|awk '!a[$1]++'`
	echo "课程号为$cid,课程名为$name的课程信息和作业为："
	echo "================================================="
	#判断课程是否发布信息
	if [ ! -e hwsystem/infor$cid$id$ctime$place ]
	then
		echo "该课程暂无信息"
	else
		cat hwsystem/infor$cid$id$ctime$place
	fi	
	echo "================================================="

	#判断该课程是否有作业
	if [ ! -e hwsystem/hw$cid$id$ctime$place ]
	then
		echo "该课程暂无作业"
	else
		cat hwsystem/hw$cid$id$ctime$place 
	fi

	echo ""
	echo "================================================="
	echo "选择该课程的学生有： "
	echo "================================================="
	#显示选择该课程的学生
	for sid in `awk '{if($1=="'$cid'"&&$2=="'$id'"&&$4=="'$ctime'"&&$5=="'$place'"){print $3}}' hwsystem/relation`
	do
		sname=`awk '{if($1=="'$sid'"){print $3}}' hwsystem/student`
		echo "$sid    $sname"
	done


	echo ""
	echo "按回车返回"
	read anychar
}

DiliverCourse()	#发布课程信息
{
	clear
	read -p "请输入课程号： " cid
	num=`awk '{print $1}' hwsystem/course|grep -w "$cid"|wc -l`
	if [ $num -eq 0 ]
	then
		echo "该课程号不存在！"
		sleep 1
		return
	fi
	read -p "请输入上课时间： " ctime
	read -p "请输入上课地点： " place
	num=`awk '{if($1=="'$cid'"&&$3=="'$id'"&&$4=="'$ctime'"&&$5=="'$place'"){print}}' hwsystem/course|wc -l`
	if [ $num -eq 0 ]
	then
		echo "当前时间、地点的课程不存在！"
		sleep 1
		return
	fi
	clear
	echo "请在下面输入课程信息，以单行.结束"
	echo "============================================"
	echo "课程信息： " > hwsystem/infor$cid$id$ctime$place
	while true
	do
		read i
		#判断是否为结束符
		if [ "$i" != "." ]
		then
			echo "$i" >> hwsystem/infor$cid$id$ctime$place
		else
			break
		fi
	done
	echo "课程信息发布成功！"
	sleep 1
}

RemoveStudent() #删除学生账户
{
	clear
	read -p "请输入课程号： " cid
	num=`awk '{print $1}' hwsystem/course|grep -w "$cid"|wc -l`
	if [ $num -eq 0 ]
	then
		echo "该课程号不存在！"
		sleep 1
		return
	fi
	read -p "请输入上课时间： " ctime
	read -p "请输入上课地点： " place
	num=`awk '{if($1=="'$cid'"&&$4=="'$ctime'"&&$5=="'$place'"){print}}' hwsystem/course|wc -l`
	if [ $num -eq 0 ]
	then
		echo "当前时间、地点的课程不存在！"
		sleep 1
		return
	fi
	read -p "请输入学生账号： " sid
	num=`awk '{print $3}' hwsystem/relation|grep -w "$sid"|wc -l`
	if [ $num -eq 0 ]
	then
		echo "该课程下没有该学生！"
		sleep 1
		return
	fi
	awk '{if($3!="'$sid'"){print}}' hwsystem/relation > hwsystem/temp
	cat temp > hwsystem/relation
	echo "删除成功"
	sleep 1
}

DiliverHomework() #发布作业或实验
{
	clear
	read -p "请输入课程号： " cid
	num=`awk '{print $1}' hwsystem/course|grep -w "$cid"|wc -l`
	if [ $num -eq 0 ]
	then
		echo "该课程号不存在！"
		sleep 1
		return
	fi
	read -p "请输入上课时间： " ctime
	read -p "请输入上课地点： " place
	num=`awk '{if($1=="'$cid'"&&$3=="'$id'"&&$4=="'$ctime'"&&$5=="'$place'"){print}}' hwsystem/course|wc -l`
	if [ $num -eq 0 ]
	then
		echo "当前时间、地点的课程不存在！"
		sleep 1
		return
	fi
	clear
	echo "请在下面输入课程作业或实验，以单行.结束"
	echo "============================================"
	echo "课程作业： " > hwsystem/hw$cid$id$ctime$place
	while true
	do
		read i
		#判断是否为结束符
		if [ "$i" != "." ]
		then
			echo "$i" >> hwsystem/hw$cid$id$ctime$place
		else
			break
		fi
	done

	#清空上次作业的上传情况
	if [ -e hwsystem/upload$cid$id$ctime$place ]
	then
		rm hwsystem/upload$cid$id$ctime$place
	fi
	echo "课程作业或实验发布成功！"
	sleep 1
}

CheckHomework() #查看作业完成情况
{
	clear
	read -p "请输入课程号： " cid
	num=`awk '{print $1}' hwsystem/course|grep -w "$cid"|wc -l`
	if [ $num -eq 0 ]
	then
		echo "该课程号不存在！"
		sleep 1
		return
	fi
	read -p "请输入上课时间： " ctime
	read -p "请输入上课地点： " place
	num=`awk '{if($1=="'$cid'"&&$4=="'$ctime'"&&$5=="'$place'"){print}}' hwsystem/course|wc -l`
	if [ $num -eq 0 ]
	then
		echo "当前时间、地点的课程不存在！"
		sleep 1
		return
	fi

	clear
	name=`awk '{if($1=="'$cid'"){print $2}}' hwsystem/course|awk '!a[$1]++'`
	echo "课程号为$cid,课程名为$name的课程上传作业的有："
	echo "================================================="
	#判断课程是否有上传作业
	if [ ! -e "hwsystem/upload$cid$id$ctime$place" ]
	then
		echo "该课程暂无作业上传"
	else
		num=`cat hwsystem/upload$cid$id$ctime$place|wc -w`
		if [ $num -eq 0 ]
		then 
			echo "该课程暂无作业上传"
		else
			cat "hwsystem/upload$cid$id$ctime$place"
		fi
	fi
	echo "按回车返回"
	read anychar
}
########################################################


#######################学生函数##########################
Student()	#学生操作选择界面
{
	#获取学生姓名
	sname=`awk '{if($1=="'$sid'"){print $3}}' hwsystem/student`

	#若是第一次登录，则更新姓名
	if [ "$sname" = "NULL" ]
	then
		ChangeName
	fi

	while true
	do
		clear
		sname=`awk '{if($1=="'$sid'"){print $3}}' hwsystem/student`
		echo "您好，$sname!"
		echo "==========================="
		echo "请选择您的操作： "
		echo "==========================="
		echo "1) 显示个人信息"
		echo "2) 修改学生姓名"
		echo "3) 修改密码"
		echo "4) 查看课程信息和作业"
		echo "5) 上传作业"
		echo "6) 查看作业完成情况"
		echo "7) 返回"
		echo "==========================="
		echo -e "您的选择是（1-7）： \c"
		read choice
		case $choice in
			1) ShowStudentInformation;;
			2) ChangeName;;
			3) ChangePassword;;
			4) ShowPersonalCourse;;
			5) UploadHomework;;
			6) CheckDone;;
			7) break;;	#跳出循环
			*) echo "$choice是一个无效的输入"
			   sleep 1;;
		esac
	done
}

ShowStudentInformation()	#显示学生个人信息
{
	clear
	name=`awk '{if($1=="'$sid'"){print $3}}' hwsystem/student`
	echo "学生学号： $sid    学生姓名： $name"
	echo "================================================="
	echo "您选择的课程有："
	awk '{if($3=="'$sid'"){print $1,$2,$4,$5}}' hwsystem/relation > hwsystem/temp
	#遍历所有符合条件的课程
	cat hwsystem/temp|while read line
	do
		cid=`echo "$line"|awk '{print $1}'`
		cname=`awk '{if($1=="'$cid'"){print $2}}' hwsystem/course|awk '!a[$1]++'`
		tid=`echo "$line"|awk '{print $2}'`
		tname=`awk '{if($1=="'$tid'"){print $3}}' hwsystem/teacher|awk '!a[$1]++'`
		ctime=`echo "$line"|awk '{print $3}'`
		place=`echo "$line"|awk '{print $4}'`
		echo "$cid    $cname    $tname    $ctime    $place"
	done
	echo ""
	echo "按回车返回"
	read anychar
}

ChangeName()	#改变学生姓名
{
	clear
	read -p "输入新名字： " newname
	#将姓名更新
	awk '{if($1=="'$sid'"){$3="'$newname'"};print}' hwsystem/student > hwsystem/temp
	cat hwsystem/temp > hwsystem/student
	echo "更新成功！"
	sleep 1
}

ChangePassword()	#修改学生密码
{
	clear
	#获取原密码
	passwd=`awk '{if($1=="'$sid'"){print $2}}' hwsystem/student`
	read -s -p "请输入原密码： " oldpw
	echo ""
	if [ "$oldpw" != "$passwd" ]
	then
			echo "密码错误！请重试！"
			sleep 1
	else
		read -s -p "请输入新密码： " passwd1
		echo ""
		read -s -p "请确认新密码： " passwd2
		echo ""
		if [ "$passwd1" != "$passwd2" ]
		then
				echo "两次密码不一致！请重试！"
				sleep 1
		else
			#删除旧信息
			sed '/'$sid' '$passwd' '$sname'/d' hwsystem/student > hwsystem/temp
			cat hwsystem/temp > hwsystem/student
			#插入新信息
			echo "$sid $passwd1 $sname" >> hwsystem/student
			echo "更新成功！"
			sleep 1
		fi
	fi
}

ShowPersonalCourse()	#显示个人课程信息
{
	clear
	read -p "请输入课程号： " cid
	num=`awk '{print $1}' hwsystem/course|grep -w "$cid"|wc -l`
	if [ $num -eq 0 ]
	then
		echo "该课程号不存在！"
		sleep 1
		return
	fi

	read -p "请输入上课时间： " ctime
	read -p "请输入上课地点： " place
	num=`awk '{if($1=="'$cid'"&&$4=="'$ctime'"&&$5=="'$place'"){print}}' hwsystem/course|wc -l`
	if [ $num -eq 0 ]
	then
		echo "当前时间、地点的课程不存在！"
		sleep 1
		return
	fi

	#获取授课教师工号
	tid=`awk '{if($1=="'$cid'"&&$4=="'$ctime'"&&$5=="'$place'"){print $3}}' hwsystem/course`


	#判断该学生是否为该课程的学生
	num=`awk '{if($1=="'$cid'"&&$2=="'$tid'"&&$3=="'$sid'"&&$4=="'$ctime'"&&$5=="'$place'"){print}}' hwsystem/relation|wc -l`
	if [ $num -eq 0 ]
	then
		echo "您不是该课程学生！"
		sleep 1
		return
	fi

	clear
	name=`awk '{if($1=="'$cid'"){print $2}}' hwsystem/course|awk '!a[$1]++'`
	echo "课程号为$cid,课程名为$name的课程信息和作业为："
	echo "================================================="
	#判断课程是否发布信息
	if [ ! -e hwsystem/infor$cid$tid$ctime$place ]
	then
		echo "该课程暂无信息"
	else
		cat hwsystem/infor$cid$tid$ctime$place
	fi	
	echo "================================================="

	#判断该课程是否有作业
	if [ ! -e hwsystem/hw$cid$tid$ctime$place ]
	then
		echo "该课程暂无作业"
	else
		cat hwsystem/hw$cid$tid$ctime$place 
	fi

	echo ""
	echo "按回车返回"
	read anychar
}

UploadHomework()	#上传作业
{
	clear
	read -p "请输入课程号： " cid
	num=`awk '{print $1}' hwsystem/course|grep -w "$cid"|wc -l`
	if [ $num -eq 0 ]
	then
		echo "该课程号不存在！"
		sleep 1
		return
	fi
	read -p "请输入上课时间： " ctime
	read -p "请输入上课地点： " place
	num=`awk '{if($1=="'$cid'"&&$4=="'$ctime'"&&$5=="'$place'"){print}}' hwsystem/course|wc -l`
	if [ $num -eq 0 ]
	then
		echo "当前时间、地点的课程不存在！"
		sleep 1
		return
	fi
	#获取授课教师工号
	tid=`awk '{if($1=="'$cid'"&&$4=="'$ctime'"&&$5=="'$place'"){print $3}}' hwsystem/course`

	clear
	echo "请将您本地的作业内容复制到下方，以单行.结束"
	echo "============================================"
	echo "课程作业： " > hwsystem/$sid$cid$tid$ctime$place
	while true
	do
		read i
		#判断是否为结束符
		if [ "$i" != "." ]
		then
			echo "$i" >> hwsystem/$sid$cid$tid$ctime$place
		else
			break
		fi
	done
	touch hwsystem/upload$cid$tid$ctime$place
	echo "$sid $sname" >> hwsystem/upload$cid$tid$ctime$place
	echo "课程作业提交成功！"
	sleep 1
}

CheckDone()		#查看是否完成作业
{
	clear
	echo "您的作业完成情况为： "
	echo "========================================"
	#对每门课程进行遍历
	cat hwsystem/relation|while read line
	do
		uid=`echo $line|awk '{print $3}'`
		if [ "$uid" != "$sid" ]
		then
			continue
		fi
		cid=`echo $line|awk '{print $1}'`
		cname=`awk '{if($1=="'$cid'"){print $2}}' hwsystem/course|awk '!a[$1]++'`
		tid=`echo $line|awk '{print $2}'`
		ctime=`echo $line|awk '{print $4}'`
		place=`echo $line|awk '{print $5}'`
		num=`cat hwsystem/upload$cid$tid$ctime$place|grep -w "$uid"|wc -l`
		if [ $num -eq 0 ]
		then
			echo "课程号：$cid    课程名：$cname    完成情况：未完成"
		else
			echo "课程号：$cid    课程名：$cname    完成情况：完成"
		fi
	done
	echo ""
	echo "按回车返回"
	read anychar
}
########################################################


#######################主函数############################
#创建文件夹保存所有用户信息
if [ ! -e hwsystem ]
then
	mkdir hwsystem
fi
#初始化管理员，root为初始管理员
if [ ! -e hwsystem/manager ]
then
	#manager保存管理员账号和密码
	echo "root root" > hwsystem/manager
fi
#初始化文件，创建三个文件保存用户名和密码
touch hwsystem/teacher 	#保存教师信息
touch hwsystem/student 	#保存学生用户名和密码
touch hwsystem/course	#保存课程、教师、作业的信息
touch hwsystem/relation #保存课程、教师、学生的联系
while true
do
	clear
	echo "欢迎使用该作业管理系统！"
	echo "所有输入中请不要使用不可见字符"
	echo "==========================="
	echo "请选择您的登陆身份："
	echo "==========================="
	echo "1) 管理员"
	echo "2) 教师"
	echo "3) 学生"
	echo "4) 退出"
	echo "==========================="
	echo -e "您的选择是（1/2/3/4）： \c"
	read choice
	case $choice in		#进行登陆选择
		1) ManagerLogIn;; #管理员登录
		2) TeacherLogIn;;
		3) StudentLogIn;;
		4) Quit;;
		*) echo "$choice是一个无效的输入"
		   sleep 1;;
	esac
done
#########################################################